-- Tabla: Roles
CREATE TABLE Roles (
    idRole INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL
);

-- Tabla: Users
CREATE TABLE Users (
    idUser INT PRIMARY KEY AUTO_INCREMENT,
    idRoleFK INT NOT NULL,
    nickname VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    passwd VARCHAR(255) NOT NULL,
    name VARCHAR(50) NOT NULL,
    surname VARCHAR(50) NOT NULL,
    entryDate DATE NOT NULL,
    leavingDate DATE,
    lastLogin DATETIME,
    pfp VARCHAR(255),
    bday DATE,
    FOREIGN KEY (idRoleFK) REFERENCES Roles(idRole)
);

-- Tabla: Entertainers
CREATE TABLE Entertainers (
    idEntertainer INT PRIMARY KEY AUTO_INCREMENT,
    idUserFK INT NOT NULL,
    isVerified BOOLEAN DEFAULT FALSE,
    level VARCHAR(50),
    yearsOfExperience INT,
    inAGroup BOOLEAN DEFAULT FALSE,
    descriptions TEXT,
    publicOpinions TEXT,
    barOpinions TEXT,
    musicianOpinions TEXT,
    idInstrumentFK INT,
    FOREIGN KEY (idUserFK) REFERENCES Users(idUser),
    FOREIGN KEY (idInstrumentFK) REFERENCES Instruments(idInstrument)
);

-- Tabla: Instruments
CREATE TABLE Instruments (
    idInstrument INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    description TEXT
);

-- Tabla: Ads
CREATE TABLE Ads (
    idAd INT PRIMARY KEY AUTO_INCREMENT,
    idEntertainerFK INT NOT NULL,
    title VARCHAR(100) NOT NULL,
    adDescription TEXT,
    price DECIMAL(10, 2) NOT NULL,
    location VARCHAR(100),
    creationDate DATETIME NOT NULL,
    publicDate DATETIME,
    publicRatings TEXT,
    photos TEXT,
    FOREIGN KEY (idEntertainerFK) REFERENCES Entertainers(idEntertainer)
);

-- Tabla: Orders
CREATE TABLE Orders (
    idOrder INT PRIMARY KEY AUTO_INCREMENT,
    idAdFK INT NOT NULL,
    isCompleted BOOLEAN DEFAULT FALSE,
    date DATETIME NOT NULL,
    location VARCHAR(100),
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (idAdFK) REFERENCES Ads(idAd)
);

-- Tabla: Subscriptions
CREATE TABLE Subscriptions (
    idSubscription INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    duration INT NOT NULL COMMENT 'Duración en días',
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabla: UserSubscriptions
CREATE TABLE UserSubscriptions (
    idUserSubscription INT PRIMARY KEY AUTO_INCREMENT,
    idUserFK INT NOT NULL,
    idSubscriptionFK INT NOT NULL,
    startDate DATETIME NOT NULL,
    endDate DATETIME NOT NULL,
    isActive BOOLEAN DEFAULT TRUE,
    paymentStatus ENUM('paid', 'pending', 'failed') DEFAULT 'pending',
    FOREIGN KEY (idUserFK) REFERENCES Users(idUser),
    FOREIGN KEY (idSubscriptionFK) REFERENCES Subscriptions(idSubscription)
);

-- Tabla: Payments
CREATE TABLE Payments (
    idPayment INT PRIMARY KEY AUTO_INCREMENT,
    idUserFK INT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    paymentMethod ENUM('credit_card', 'paypal', 'other') NOT NULL,
    paymentDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('successful', 'failed', 'pending') DEFAULT 'pending',
    transactionId VARCHAR(255),
    FOREIGN KEY (idUserFK) REFERENCES Users(idUser)
);
